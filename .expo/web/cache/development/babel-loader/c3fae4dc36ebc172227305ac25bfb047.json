{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTablePagination.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport IconButton from \"../IconButton\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\n\nvar DataTablePagination = function (_React$Component) {\n  _inherits(DataTablePagination, _React$Component);\n\n  function DataTablePagination() {\n    _classCallCheck(this, DataTablePagination);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataTablePagination).apply(this, arguments));\n  }\n\n  _createClass(DataTablePagination, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          page = _this$props.page,\n          numberOfPages = _this$props.numberOfPages,\n          onPageChange = _this$props.onPageChange,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"label\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\"]);\n\n      var labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      return React.createElement(View, _extends({}, rest, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }), React.createElement(Text, {\n        style: [styles.label, {\n          color: labelColor\n        }],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, label), React.createElement(IconButton, {\n        icon: function icon(_ref) {\n          var size = _ref.size,\n              color = _ref.color;\n          return React.createElement(MaterialCommunityIcon, {\n            name: \"chevron-left\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            }\n          });\n        },\n        color: theme.colors.text,\n        disabled: page === 0,\n        onPress: function onPress() {\n          return onPageChange(page - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }), React.createElement(IconButton, {\n        icon: function icon(_ref2) {\n          var size = _ref2.size,\n              color = _ref2.color;\n          return React.createElement(MaterialCommunityIcon, {\n            name: \"chevron-right\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            }\n          });\n        },\n        color: theme.colors.text,\n        disabled: page === numberOfPages - 1,\n        onPress: function onPress() {\n          return onPageChange(page + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }));\n    }\n  }]);\n\n  return DataTablePagination;\n}(React.Component);\n\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 44\n  }\n});\nexport default withTheme(DataTablePagination);\nexport { DataTablePagination };","map":{"version":3,"mappings":"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","names":["React","color","IconButton","Text","withTheme","MaterialCommunityIcon","DataTablePagination","props","label","page","numberOfPages","onPageChange","style","theme","rest","labelColor","colors","text","alpha","rgb","string","View","styles","container","__source","fileName","lineNumber","numberOfLines","icon","size","name","direction","I18nManager","isRTL","disabled","onPress","Component","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","fontSize","marginRight"],"sources":["DataTablePagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTablePagination extends React.Component<Props> {\n  static displayName = 'DataTable.Pagination';\n\n  render() {\n    const {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const labelColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n          {label}\n        </Text>\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(page - 1)}\n        />\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-right\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === numberOfPages - 1}\n          onPress={() => onPageChange(page + 1)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}