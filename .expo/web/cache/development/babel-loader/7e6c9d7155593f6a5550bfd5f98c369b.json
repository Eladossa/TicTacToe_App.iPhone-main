{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Banner.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport Button from \"./Button\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\nimport shadow from \"../styles/shadow\";\nvar ELEVATION = 1;\nvar DEFAULT_MAX_WIDTH = 960;\n\nvar Banner = function (_React$Component) {\n  _inherits(Banner, _React$Component);\n\n  function Banner() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Banner);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Banner)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      position: new Animated.Value(_this.props.visible ? 1 : 0),\n      layout: {\n        height: 0,\n        measured: false\n      }\n    };\n\n    _this.handleLayout = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var height = nativeEvent.layout.height;\n\n      _this.setState({\n        layout: {\n          height: height,\n          measured: true\n        }\n      });\n    };\n\n    _this.toggle = function () {\n      if (_this.props.visible) {\n        _this.show();\n      } else {\n        _this.hide();\n      }\n    };\n\n    _this.show = function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.position, {\n        duration: 250 * scale,\n        toValue: 1\n      }).start();\n    };\n\n    _this.hide = function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.position, {\n        duration: 200 * scale,\n        toValue: 0\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(Banner, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.toggle();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          icon = _this$props.icon,\n          children = _this$props.children,\n          actions = _this$props.actions,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"style\", \"theme\"]);\n\n      var _this$state = this.state,\n          position = _this$state.position,\n          layout = _this$state.layout;\n      var height = Animated.multiply(position, layout.height);\n      var translateY = Animated.multiply(Animated.add(position, -1), layout.height);\n      return React.createElement(Surface, _extends({}, rest, {\n        style: [styles.container, shadow(ELEVATION), style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        }\n      }), React.createElement(View, {\n        style: [styles.wrapper, contentStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          height: height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }), React.createElement(Animated.View, {\n        onLayout: this.handleLayout,\n        style: [layout.measured || !visible ? [styles.absolute, {\n          transform: [{\n            translateY: translateY\n          }]\n        }] : null, !layout.measured && !visible ? {\n          opacity: 0\n        } : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        }\n      }, icon ? React.createElement(View, {\n        style: styles.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        }\n      }, React.createElement(Icon, {\n        source: icon,\n        size: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        }\n      })) : null, React.createElement(Text, {\n        style: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        }\n      }, children)), React.createElement(View, {\n        style: styles.actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        }\n      }, actions.map(function (_ref2, i) {\n        var label = _ref2.label,\n            others = _objectWithoutProperties(_ref2, [\"label\"]);\n\n        return React.createElement(Button, _extends({\n          key: i,\n          compact: true,\n          mode: \"text\",\n          style: styles.button\n        }, others, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          }\n        }), label);\n      })))));\n    }\n  }]);\n\n  return Banner;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  }\n});\nexport default withTheme(Banner);","map":{"version":3,"mappings":"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","names":["React","Surface","Text","Button","Icon","withTheme","shadow","ELEVATION","DEFAULT_MAX_WIDTH","Banner","state","position","Animated","Value","_this","props","visible","layout","height","measured","handleLayout","nativeEvent","setState","toggle","show","hide","scale","theme","animation","timing","duration","toValue","start","prevProps","icon","children","actions","contentStyle","style","rest","multiply","translateY","add","styles","container","__source","fileName","lineNumber","View","wrapper","onLayout","absolute","transform","opacity","content","source","size","message","map","i","label","others","key","compact","mode","button","Component","StyleSheet","create","elevation","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","flex"],"sources":["Banner.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport { Theme, $RemoveChildren } from '../types';\nimport shadow from '../styles/shadow';\n\nconst ELEVATION = 1;\nconst DEFAULT_MAX_WIDTH = 960;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<{\n    label: string;\n    onPress: () => void;\n  }>;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  position: Animated.Value;\n  layout: {\n    height: number;\n    measured: boolean;\n  };\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: true,\n *   };\n *\n *   render() {\n *     return (\n *       <Banner\n *         visible={this.state.visible}\n *         actions={[\n *           {\n *             label: 'Fix it',\n *             onPress: () => this.setState({ visible: false }),\n *           },\n *           {\n *             label: 'Learn more',\n *             onPress: () => this.setState({ visible: false }),\n *           },\n *         ]}\n *         icon={({ size }) =>\n *           <Image\n *             source={{ uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4' }}\n *             style={{\n *               width: size,\n *               height: size,\n *             }}\n *           />\n *         }\n *       >\n *         There was a problem processing a transaction on your credit card.\n *       </Banner>\n *     );\n *   }\n * }\n * ```\n */\nclass Banner extends React.Component<Props, State> {\n  state = {\n    position: new Animated.Value(this.props.visible ? 1 : 0),\n    layout: {\n      height: 0,\n      measured: false,\n    },\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.toggle();\n    }\n  }\n\n  private handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n\n    this.setState({ layout: { height, measured: true } });\n  };\n\n  private toggle = () => {\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private show = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.position, {\n      duration: 250 * scale,\n      toValue: 1,\n    }).start();\n  };\n\n  private hide = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.position, {\n      duration: 200 * scale,\n      toValue: 0,\n    }).start();\n  };\n\n  render() {\n    const {\n      visible,\n      icon,\n      children,\n      actions,\n      contentStyle,\n      style,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      theme,\n      ...rest\n    } = this.props;\n    const { position, layout } = this.state;\n\n    // The banner animation has 2 parts:\n    // 1. Blank spacer element which animates its height to move the content\n    // 2. Actual banner which animates its translateY\n    // In initial render, we position everything normally and measure the height of the banner\n    // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n    // We need this because we need to move the content below as if banner's height was being animated\n    // However we can't animated banner's height directly as it'll also resize the content inside\n    const height = Animated.multiply(position, layout.height);\n\n    const translateY = Animated.multiply(\n      Animated.add(position, -1),\n      layout.height\n    );\n    return (\n      <Surface\n        {...rest}\n        style={[styles.container, shadow(ELEVATION) as ViewStyle, style]}\n      >\n        <View style={[styles.wrapper, contentStyle]}>\n          <Animated.View style={{ height }} />\n          <Animated.View\n            onLayout={this.handleLayout}\n            style={[\n              layout.measured || !visible\n                ? // If we have measured banner's height or it's invisible,\n                  // Position it absolutely, the layout will be taken care of the spacer\n                  [styles.absolute, { transform: [{ translateY }] }]\n                : // Otherwise position it normally\n                  null,\n              !layout.measured && !visible\n                ? // If we haven't measured banner's height yet and it's invisible,\n                  // hide it with opacity: 0 so user doesn't see it\n                  { opacity: 0 }\n                : null,\n            ]}\n          >\n            <View style={styles.content}>\n              {icon ? (\n                <View style={styles.icon}>\n                  {/*\n                  // @ts-ignore */}\n                  <Icon source={icon} size={40} />\n                </View>\n              ) : null}\n              <Text style={styles.message}>{children}</Text>\n            </View>\n            <View style={styles.actions}>\n              {actions.map(({ label, ...others }, i) => (\n                <Button\n                  key={/* eslint-disable-line react/no-array-index-key */ i}\n                  compact\n                  mode=\"text\"\n                  style={styles.button}\n                  {...others}\n                >\n                  {label}\n                </Button>\n              ))}\n            </View>\n          </Animated.View>\n        </View>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION,\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n});\n\nexport default withTheme(Banner);\n"]},"metadata":{},"sourceType":"module"}