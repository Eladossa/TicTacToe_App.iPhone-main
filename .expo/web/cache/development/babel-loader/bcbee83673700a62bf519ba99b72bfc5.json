{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Portal/PortalManager.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar PortalManager = function (_React$PureComponent) {\n  _inherits(PortalManager, _React$PureComponent);\n\n  function PortalManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PortalManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PortalManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      portals: []\n    };\n\n    _this.mount = function (key, children) {\n      _this.setState(function (state) {\n        return {\n          portals: [].concat(_toConsumableArray(state.portals), [{\n            key: key,\n            children: children\n          }])\n        };\n      });\n    };\n\n    _this.update = function (key, children) {\n      return _this.setState(function (state) {\n        return {\n          portals: state.portals.map(function (item) {\n            if (item.key === key) {\n              return _objectSpread({}, item, {\n                children: children\n              });\n            }\n\n            return item;\n          })\n        };\n      });\n    };\n\n    _this.unmount = function (key) {\n      return _this.setState(function (state) {\n        return {\n          portals: state.portals.filter(function (item) {\n            return item.key !== key;\n          })\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PortalManager, [{\n    key: \"render\",\n    value: function render() {\n      return this.state.portals.map(function (_ref) {\n        var key = _ref.key,\n            children = _ref.children;\n        return React.createElement(View, {\n          key: key,\n          collapsable: false,\n          pointerEvents: \"box-none\",\n          style: StyleSheet.absoluteFill,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          }\n        }, children);\n      });\n    }\n  }]);\n\n  return PortalManager;\n}(React.PureComponent);\n\nexport { PortalManager as default };","map":{"version":3,"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;IAaqBC,a;;;;;;;;;;;;;;;UACnBC,K,GAAe;MACbC,OAAO,EAAE;IADI,C;;UAIfC,K,GAAQ,UAACC,GAAD,EAAcC,QAAd,EAA4C;MAClDC,MAAKC,QAAL,CAAc,iBAAK;QAAA,OAAK;UACtBL,OAAO,+BAAMD,KAAK,CAACC,OAAZ,IAAqB;YAAEE,GAAG,EAAHA,GAAF;YAAOC,QAAQ,EAARA;UAAP,CAArB;QADe,CAAL;MAAnB;;;UAKFG,M,GAAS,UAACJ,GAAD,EAAcC,QAAd;MAAA,OACPC,MAAKC,QAAL,CAAc,iBAAK;QAAA,OAAK;UACtBL,OAAO,EAAED,KAAK,CAACC,OAAND,CAAcQ,GAAdR,CAAkB,gBAAQ;YACjC,IAAIS,IAAI,CAACN,GAALM,KAAaN,GAAjB,EAAsB;cACpB,yBAAYM,IAAZ;gBAAkBL,QAAQ,EAARA;cAAlB;YAEF;;YAAA,OAAOK,IAAP;UAJO;QADa,CAAL;MAAnB,EADO;;;UAUTC,O,GAAU,UAACP,GAAD;MAAA,OACRE,MAAKC,QAAL,CAAc,iBAAK;QAAA,OAAK;UACtBL,OAAO,EAAED,KAAK,CAACC,OAAND,CAAcW,MAAdX,CAAqB,gBAAI;YAAA,OAAIS,IAAI,CAACN,GAALM,KAAaN,GAAjB;UAAzB;QADa,CAAL;MAAnB,EADQ;;;;;;;;6BAKD;MACP,OAAO,KAAKH,KAAL,CAAWC,OAAX,CAAmBO,GAAnB,CAAuB;QAAA,IAAGL,GAAH,QAAGA,GAAH;QAAA,IAAQC,QAAR,QAAQA,QAAR;QAAA,OAC5BN,oBAACc,IAAD;UACET,GAAG,EAAEA,GADP;UAEEU,WAAW,EACT,KAHJ;UAKEC,aAAa,EAAC,UALhB;UAMEC,KAAK,EAAEC,UAAU,CAACC,YANpB;UAAAC;YAAAC;YAAAC;UAAA;QAAA,GAQGhB,QARH,CAD4B;MAAvB,EAAP;;;;;EA3BuCN,KAAK,CAACuB,a;;SAA5BtB,a","names":["React","PortalManager","state","portals","mount","key","children","_this","setState","update","map","item","unmount","filter","View","collapsable","pointerEvents","style","StyleSheet","absoluteFill","__source","fileName","lineNumber","PureComponent"],"sources":["PortalManager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\ntype State = {\n  portals: Array<{\n    key: number;\n    children: React.ReactNode;\n  }>;\n};\n\n/**\n * Portal host is the component which actually renders all Portals.\n */\nexport default class PortalManager extends React.PureComponent<{}, State> {\n  state: State = {\n    portals: [],\n  };\n\n  mount = (key: number, children: React.ReactNode) => {\n    this.setState(state => ({\n      portals: [...state.portals, { key, children }],\n    }));\n  };\n\n  update = (key: number, children: React.ReactNode) =>\n    this.setState(state => ({\n      portals: state.portals.map(item => {\n        if (item.key === key) {\n          return { ...item, children };\n        }\n        return item;\n      }),\n    }));\n\n  unmount = (key: number) =>\n    this.setState(state => ({\n      portals: state.portals.filter(item => item.key !== key),\n    }));\n\n  render() {\n    return this.state.portals.map(({ key, children }) => (\n      <View\n        key={key}\n        collapsable={\n          false /* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */\n        }\n        pointerEvents=\"box-none\"\n        style={StyleSheet.absoluteFill}\n      >\n        {children}\n      </View>\n    ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}