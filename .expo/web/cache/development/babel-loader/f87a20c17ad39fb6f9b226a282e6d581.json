{"ast":null,"code":"import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Statistics from \"./screens/Statistics\";\nimport Game from \"./screens/Game\";\nimport ResultModal from \"./screens/ResultModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var RootStack = createStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Game Screen\",\n      children: [_jsxs(Stack.Group, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Game Screen\",\n          component: Game\n        }), _jsx(Stack.Screen, {\n          name: \"Statics Screen\",\n          component: Statistics\n        })]\n      }), _jsx(Stack.Group, {\n        screenOptions: {\n          presentation: 'modal'\n        },\n        children: _jsx(Stack.Screen, {\n          name: \"Result Modal\",\n          component: ResultModal\n        })\n      })]\n    })\n  });\n}\nvar Stack = createNativeStackNavigator();","map":{"version":3,"names":["React","useState","NavigationContainer","createNativeStackNavigator","Statistics","Game","ResultModal","App","RootStack","createStackNavigator","presentation","Stack"],"sources":["C:/Users/Elad Hatan/Desktop/TicTacToe_App/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Statistics from './screens/Statistics';\nimport Game from './screens/Game';\nimport ResultModal from './screens/ResultModal';\n\nexport default function App() {\n  const RootStack = createStackNavigator();\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName='Game Screen'>\n        <Stack.Group>\n          <Stack.Screen name='Game Screen' component={Game} />\n          <Stack.Screen name='Statics Screen' component={Statistics} />\n        </Stack.Group>\n        <Stack.Group screenOptions={{ presentation: 'modal' }}>\n          <Stack.Screen name='Result Modal' component={ResultModal} />\n        </Stack.Group>\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAMC,SAAS,GAAGC,oBAAoB,EAAtC;EAEA,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,KAAD,CAAO,SAAP;MAAiB,gBAAgB,EAAC,aAAlC;MAAA,WACE,MAAC,KAAD,CAAO,KAAP;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,aAAnB;UAAiC,SAAS,EAAEJ;QAA5C,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,gBAAnB;UAAoC,SAAS,EAAED;QAA/C,EAFF;MAAA,EADF,EAKE,KAAC,KAAD,CAAO,KAAP;QAAa,aAAa,EAAE;UAAEM,YAAY,EAAE;QAAhB,CAA5B;QAAA,UACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,cAAnB;UAAkC,SAAS,EAAEJ;QAA7C;MADF,EALF;IAAA;EADF,EADF;AAaD;AAED,IAAMK,KAAK,GAAGR,0BAA0B,EAAxC"},"metadata":{},"sourceType":"module"}