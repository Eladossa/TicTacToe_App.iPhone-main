{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Portal/PortalHost.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PortalManager from \"./PortalManager\";\nexport var PortalContext = React.createContext(null);\n\nvar PortalHost = function (_React$Component) {\n  _inherits(PortalHost, _React$Component);\n\n  function PortalHost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PortalHost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PortalHost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.setManager = function (manager) {\n      _this.manager = manager;\n    };\n\n    _this.mount = function (children) {\n      var key = _this.nextKey++;\n\n      if (_this.manager) {\n        _this.manager.mount(key, children);\n      } else {\n        _this.queue.push({\n          type: 'mount',\n          key: key,\n          children: children\n        });\n      }\n\n      return key;\n    };\n\n    _this.update = function (key, children) {\n      if (_this.manager) {\n        _this.manager.update(key, children);\n      } else {\n        var op = {\n          type: 'mount',\n          key: key,\n          children: children\n        };\n\n        var index = _this.queue.findIndex(function (o) {\n          return o.type === 'mount' || o.type === 'update' && o.key === key;\n        });\n\n        if (index > -1) {\n          _this.queue[index] = op;\n        } else {\n          _this.queue.push(op);\n        }\n      }\n    };\n\n    _this.unmount = function (key) {\n      if (_this.manager) {\n        _this.manager.unmount(key);\n      } else {\n        _this.queue.push({\n          type: 'unmount',\n          key: key\n        });\n      }\n    };\n\n    _this.nextKey = 0;\n    _this.queue = [];\n    return _this;\n  }\n\n  _createClass(PortalHost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var manager = this.manager;\n      var queue = this.queue;\n\n      while (queue.length && manager) {\n        var action = queue.pop();\n\n        if (action) {\n          switch (action.type) {\n            case 'mount':\n              manager.mount(action.key, action.children);\n              break;\n\n            case 'update':\n              manager.update(action.key, action.children);\n              break;\n\n            case 'unmount':\n              manager.unmount(action.key);\n              break;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PortalContext.Provider, {\n        value: {\n          mount: this.mount,\n          update: this.update,\n          unmount: this.unmount\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        collapsable: false,\n        pointerEvents: \"box-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        }\n      }, this.props.children), React.createElement(PortalManager, {\n        ref: this.setManager,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }));\n    }\n  }]);\n\n  return PortalHost;\n}(React.Component);\n\nPortalHost.displayName = 'Portal.Host';\nexport { PortalHost as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["React","PortalManager","PortalContext","createContext","PortalHost","setManager","manager","_this","mount","children","key","nextKey","queue","push","type","update","op","index","findIndex","o","unmount","length","action","pop","Provider","value","__source","fileName","lineNumber","View","style","styles","container","collapsable","pointerEvents","props","ref","Component","displayName","StyleSheet","create","flex"],"sources":["PortalHost.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport PortalManager from './PortalManager';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype Operation =\n  | { type: 'mount'; key: number; children: React.ReactNode }\n  | { type: 'update'; key: number; children: React.ReactNode }\n  | { type: 'unmount'; key: number };\n\nexport type PortalMethods = {\n  mount: (children: React.ReactNode) => number;\n  update: (key: number, children: React.ReactNode) => void;\n  unmount: (key: number) => void;\n};\n\nexport const PortalContext = React.createContext<PortalMethods>(null as any);\n\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal.Host>\n *         <Text>Content of the app</Text>\n *       </Portal.Host>\n *     );\n *   }\n * }\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nexport default class PortalHost extends React.Component<Props> {\n  static displayName = 'Portal.Host';\n\n  componentDidMount() {\n    const manager = this.manager;\n    const queue = this.queue;\n\n    while (queue.length && manager) {\n      const action = queue.pop();\n      if (action) {\n        // eslint-disable-next-line default-case\n        switch (action.type) {\n          case 'mount':\n            manager.mount(action.key, action.children);\n            break;\n          case 'update':\n            manager.update(action.key, action.children);\n            break;\n          case 'unmount':\n            manager.unmount(action.key);\n            break;\n        }\n      }\n    }\n  }\n\n  private setManager = (manager: PortalManager | undefined | null) => {\n    this.manager = manager;\n  };\n\n  private mount = (children: React.ReactNode) => {\n    const key = this.nextKey++;\n\n    if (this.manager) {\n      this.manager.mount(key, children);\n    } else {\n      this.queue.push({ type: 'mount', key, children });\n    }\n\n    return key;\n  };\n\n  private update = (key: number, children: React.ReactNode) => {\n    if (this.manager) {\n      this.manager.update(key, children);\n    } else {\n      const op = { type: 'mount', key, children };\n      const index = this.queue.findIndex(\n        o => o.type === 'mount' || (o.type === 'update' && o.key === key)\n      );\n\n      if (index > -1) {\n        // @ts-ignore\n        this.queue[index] = op;\n      } else {\n        this.queue.push(op as Operation);\n      }\n    }\n  };\n\n  private unmount = (key: number) => {\n    if (this.manager) {\n      this.manager.unmount(key);\n    } else {\n      this.queue.push({ type: 'unmount', key });\n    }\n  };\n\n  private nextKey = 0;\n  private queue: Operation[] = [];\n  private manager: PortalManager | null | undefined;\n\n  render() {\n    return (\n      <PortalContext.Provider\n        value={{\n          mount: this.mount,\n          update: this.update,\n          unmount: this.unmount,\n        }}\n      >\n        {/* Need collapsable=false here to clip the elevations, otherwise they appear above Portal components */}\n        <View\n          style={styles.container}\n          collapsable={false}\n          pointerEvents=\"box-none\"\n        >\n          {this.props.children}\n        </View>\n        <PortalManager ref={this.setManager} />\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}