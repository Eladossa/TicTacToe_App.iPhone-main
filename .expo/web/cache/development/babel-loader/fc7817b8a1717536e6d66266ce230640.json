{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/TextInput/TextInputFlat.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport InputLabel from \"./Label/InputLabel\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, LABEL_PADDING_HORIZONTAL } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingFlat, interpolatePlaceholder } from \"./helpers\";\nvar MINIMIZED_LABEL_Y_OFFSET = -18;\nvar LABEL_PADDING_TOP = 30;\nvar LABEL_PADDING_TOP_DENSE = 24;\nvar MIN_HEIGHT = 64;\nvar MIN_DENSE_HEIGHT_WL = 52;\nvar MIN_DENSE_HEIGHT = 40;\nvar INPUT_OFFSET = 8;\n\nvar TextInputFlat = function (_React$Component) {\n  _inherits(TextInputFlat, _React$Component);\n\n  function TextInputFlat() {\n    _classCallCheck(this, TextInputFlat);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TextInputFlat).apply(this, arguments));\n  }\n\n  _createClass(TextInputFlat, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          editable = _this$props.editable,\n          label = _this$props.label,\n          error = _this$props.error,\n          selectionColor = _this$props.selectionColor,\n          underlineColor = _this$props.underlineColor,\n          dense = _this$props.dense,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          render = _this$props.render,\n          multiline = _this$props.multiline,\n          parentState = _this$props.parentState,\n          innerRef = _this$props.innerRef,\n          onFocus = _this$props.onFocus,\n          onBlur = _this$props.onBlur,\n          onChangeText = _this$props.onChangeText,\n          onLayoutAnimatedText = _this$props.onLayoutAnimatedText,\n          rest = _objectWithoutProperties(_this$props, [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\"]);\n\n      var colors = theme.colors,\n          fonts = theme.fonts;\n      var font = fonts.regular;\n      var hasActiveOutline = parentState.focused || error;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          fontSizeStyle = _ref.fontSize,\n          fontWeight = _ref.fontWeight,\n          height = _ref.height,\n          paddingHorizontal = _ref.paddingHorizontal,\n          viewStyle = _objectWithoutProperties(_ref, [\"fontSize\", \"fontWeight\", \"height\", \"paddingHorizontal\"]);\n\n      var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n      var paddingOffset = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number' ? {\n        paddingHorizontal: paddingHorizontal\n      } : StyleSheet.flatten(styles.paddingOffset);\n      var inputTextColor, activeColor, underlineColorCustom, placeholderColor, errorColor;\n\n      if (disabled) {\n        inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n        placeholderColor = colors.disabled;\n        underlineColorCustom = 'transparent';\n      } else {\n        inputTextColor = colors.text;\n        activeColor = error ? colors.error : colors.primary;\n        placeholderColor = colors.placeholder;\n        errorColor = colors.error;\n        underlineColorCustom = underlineColor || colors.disabled;\n      }\n\n      var containerStyle = {\n        backgroundColor: theme.dark ? color(colors.background).lighten(0.24).rgb().string() : color(colors.background).darken(0.06).rgb().string(),\n        borderTopLeftRadius: theme.roundness,\n        borderTopRightRadius: theme.roundness\n      };\n      var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n      var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n      var labelWidth = parentState.labelLayout.width;\n      var labelHeight = parentState.labelLayout.height;\n      var labelHalfWidth = labelWidth / 2;\n      var labelHalfHeight = labelHeight / 2;\n      var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * paddingOffset.paddingHorizontal;\n      var minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n      var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n      var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n      if (height && typeof height !== 'number') console.warn('Currently we support only numbers in height prop');\n      var paddingSettings = {\n        height: height ? +height : null,\n        labelHalfHeight: labelHalfHeight,\n        offset: INPUT_OFFSET,\n        multiline: multiline ? multiline : null,\n        dense: dense ? dense : null,\n        topPosition: topPosition,\n        fontSize: fontSize,\n        label: label,\n        scale: fontScale,\n        isAndroid: Platform.OS === 'android',\n        styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n      };\n      var pad = calculatePadding(paddingSettings);\n      var paddingFlat = adjustPaddingFlat(_objectSpread({}, paddingSettings, {\n        pad: pad\n      }));\n      var baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n      var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n      var labelProps = {\n        label: label,\n        onLayoutAnimatedText: onLayoutAnimatedText,\n        placeholderOpacity: placeholderOpacity,\n        error: error,\n        placeholderStyle: styles.placeholder,\n        baseLabelTranslateY: baseLabelTranslateY,\n        baseLabelTranslateX: baseLabelTranslateX,\n        font: font,\n        fontSize: fontSize,\n        fontWeight: fontWeight,\n        labelScale: labelScale,\n        wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n        topPosition: topPosition,\n        paddingOffset: paddingOffset,\n        hasActiveOutline: hasActiveOutline,\n        activeColor: activeColor,\n        placeholderColor: placeholderColor,\n        errorColor: errorColor\n      };\n      var minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n      var flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n      return React.createElement(View, {\n        style: [containerStyle, viewStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        }\n      }, React.createElement(Underline, {\n        parentState: parentState,\n        underlineColorCustom: underlineColorCustom,\n        error: error,\n        colors: colors,\n        activeColor: activeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        }\n      }), React.createElement(View, {\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0,\n          minHeight: minHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        }\n      }, React.createElement(InputLabel, {\n        parentState: parentState,\n        labelProps: labelProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        }\n      }), render == null ? void 0 : render(_objectSpread({}, rest, {\n        ref: innerRef,\n        onChangeText: onChangeText,\n        placeholder: label ? parentState.placeholder : this.props.placeholder,\n        placeholderTextColor: placeholderColor,\n        editable: !disabled && editable,\n        selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        underlineColorAndroid: 'transparent',\n        multiline: multiline,\n        style: [styles.input, paddingOffset, !multiline || multiline && height ? {\n          height: flatHeight\n        } : {}, paddingFlat, _objectSpread({}, font, {\n          fontSize: fontSize,\n          fontWeight: fontWeight,\n          color: inputTextColor,\n          textAlignVertical: multiline ? 'top' : 'center'\n        })]\n      }))));\n    }\n  }]);\n\n  return TextInputFlat;\n}(React.Component);\n\nTextInputFlat.defaultProps = {\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: function render(props) {\n    return React.createElement(NativeTextInput, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      }\n    }));\n  }\n};\nexport default TextInputFlat;\n\nvar Underline = function Underline(_ref2) {\n  var parentState = _ref2.parentState,\n      error = _ref2.error,\n      colors = _ref2.colors,\n      activeColor = _ref2.activeColor,\n      underlineColorCustom = _ref2.underlineColorCustom;\n  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return React.createElement(Animated.View, {\n    style: [styles.underline, {\n      backgroundColor: backgroundColor,\n      transform: [{\n        scaleY: parentState.focused ? 1 : 0.5\n      }]\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  paddingOffset: {\n    paddingHorizontal: LABEL_PADDING_HORIZONTAL\n  }\n});","map":{"version":3,"mappings":"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","names":["React","color","InputLabel","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","LABEL_PADDING_HORIZONTAL","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingFlat","interpolatePlaceholder","MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","INPUT_OFFSET","TextInputFlat","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","render","multiline","parentState","innerRef","onFocus","onBlur","onChangeText","onLayoutAnimatedText","rest","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","paddingHorizontal","viewStyle","paddingOffset","undefined","styles","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","minHeight","flatHeight","View","__source","fileName","lineNumber","Underline","paddingTop","paddingBottom","ref","placeholderTextColor","underlineColorAndroid","input","textAlignVertical","Component","defaultProps","NativeTextInput","Animated","underline","transform","scaleY","create","position","left","right","bottom","flexGrow","margin","textAlign","zIndex"],"sources":["TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  LABEL_PADDING_HORIZONTAL,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n} from './helpers';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nconst INPUT_OFFSET = 8;\n\nclass TextInputFlat extends React.Component<ChildTextInputProps, {}> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n    const paddingOffset = (paddingHorizontal !== undefined &&\n    typeof paddingHorizontal === 'number'\n      ? { paddingHorizontal }\n      : StyleSheet.flatten(styles.paddingOffset)) as {\n      paddingHorizontal: number;\n    };\n\n    let inputTextColor,\n      activeColor,\n      underlineColorCustom,\n      placeholderColor,\n      errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background)\n            .lighten(0.24)\n            .rgb()\n            .string()\n        : color(colors.background)\n            .darken(0.06)\n            .rgb()\n            .string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n        (labelHalfWidth - (labelScale * labelWidth) / 2) +\n      (1 - labelScale) * paddingOffset.paddingHorizontal;\n\n    const minInputHeight = dense\n      ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) -\n        LABEL_PADDING_TOP_DENSE\n      : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n    );\n\n    if (height && typeof height !== 'number')\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputFlatDense : styles.inputFlat\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingFlat = adjustPaddingFlat({\n      ...paddingSettings,\n      pad,\n    });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n    };\n\n    const minHeight =\n      height ||\n      (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n    const flatHeight =\n      inputHeight +\n      (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        <Underline\n          parentState={parentState}\n          underlineColorCustom={underlineColorCustom}\n          error={error}\n          colors={colors}\n          activeColor={activeColor}\n        />\n        <View\n          style={{\n            paddingTop: 0,\n            paddingBottom: 0,\n            minHeight,\n          }}\n        >\n          <InputLabel parentState={parentState} labelProps={labelProps} />\n\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            // @ts-ignore\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              paddingOffset,\n              !multiline || (multiline && height) ? { height: flatHeight } : {},\n              paddingFlat,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n              },\n            ],\n          })}\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    zIndex: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  paddingOffset: {\n    paddingHorizontal: LABEL_PADDING_HORIZONTAL,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}