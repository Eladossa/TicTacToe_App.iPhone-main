{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Statistics from \"./components/Statistics\";\nimport Game from \"./components/Game\";\nimport ResultModal from \"./components/ResultModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar URL = 'http://www.wearetheworld.somee.com/api/Games/GamesList';\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stats = _useState2[0],\n      setStats = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      load = _useState4[0],\n      setLoad = _useState4[1];\n\n  var getFromApi = function getFromApi() {\n    console.log('start getFromApi');\n    return fetch(URL, {}).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data.liststats);\n      setStats(data.liststats);\n      setLoad(false);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  useEffect(function () {\n    getFromApi();\n  }, []);\n  var Stack = createNativeStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: load ? null : _jsxs(Stack.Navigator, {\n      initialRouteName: \"Game Screen\",\n      children: [_jsxs(Stack.Group, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Game Screen\",\n          component: Game\n        }), _jsx(Stack.Screen, {\n          name: \"Statics Screen\",\n          component: Statistics,\n          initialParams: {\n            stats: stats\n          }\n        })]\n      }), _jsx(Stack.Group, {\n        screenOptions: {\n          presentation: 'card'\n        },\n        children: _jsx(Stack.Screen, {\n          name: \"Result Modal\",\n          component: ResultModal\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","Statistics","Game","ResultModal","URL","App","stats","setStats","load","setLoad","getFromApi","console","log","fetch","then","res","json","data","liststats","catch","error","Stack","presentation"],"sources":["C:/Users/Elad Hatan/Desktop/TicTacToe_App.iPhone-main3/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Statistics from './components/Statistics';\r\nimport Game from './components/Game';\r\nimport ResultModal from './components/ResultModal';\r\nconst URL = 'http://www.wearetheworld.somee.com/api/Games/GamesList';\r\n\r\n// npm install  @react-navigation/native @react-navigation/native-stack\r\n\r\nexport default function App() {\r\n  const [stats, setStats] = useState([]);\r\n  const [load, setLoad] = useState(true);\r\n\r\n  const getFromApi = () => {\r\n    console.log('start getFromApi');\r\n\r\n    return fetch(URL, {})\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data.liststats);\r\n        setStats(data.liststats);\r\n        setLoad(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFromApi();\r\n  }, []);\r\n\r\n  const Stack = createNativeStackNavigator();\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {load ? null : (\r\n        <Stack.Navigator initialRouteName='Game Screen'>\r\n          <Stack.Group>\r\n            <Stack.Screen name='Game Screen' component={Game} />\r\n            <Stack.Screen\r\n              name='Statics Screen'\r\n              component={Statistics}\r\n              initialParams={{ stats: stats }}\r\n            />\r\n          </Stack.Group>\r\n          <Stack.Group screenOptions={{ presentation: 'card' }}>\r\n            <Stack.Screen name='Result Modal' component={ResultModal} />\r\n          </Stack.Group>\r\n        </Stack.Navigator>\r\n      )}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n//in package.json - didn't work\r\n//\"proxy\": \"http://localhost:19006\"\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,WAAP;;;AACA,IAAMC,GAAG,GAAG,wDAAZ;AAIA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA0BR,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOS,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAwBV,QAAQ,CAAC,IAAD,CAAhC;EAAA;EAAA,IAAOW,IAAP;EAAA,IAAaC,OAAb;;EAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBC,OAAO,CAACC,GAAR,CAAY,kBAAZ;IAEA,OAAOC,KAAK,CAACT,GAAD,EAAM,EAAN,CAAL,CACJU,IADI,CACC,UAACC,GAAD;MAAA,OAASA,GAAG,CAACC,IAAJ,EAAT;IAAA,CADD,EAEJF,IAFI,CAEC,UAACG,IAAD,EAAU;MACdN,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,SAAjB;MACAX,QAAQ,CAACU,IAAI,CAACC,SAAN,CAAR;MACAT,OAAO,CAAC,KAAD,CAAP;IACD,CANI,EAOJU,KAPI,CAOE,UAACC,KAAD,EAAW;MAChBT,OAAO,CAACS,KAAR,CAAcA,KAAd;IACD,CATI,CAAP;EAUD,CAbD;;EAeAtB,SAAS,CAAC,YAAM;IACdY,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;EAIA,IAAMW,KAAK,GAAGrB,0BAA0B,EAAxC;EAEA,OACE,KAAC,mBAAD;IAAA,UACGQ,IAAI,GAAG,IAAH,GACH,MAAC,KAAD,CAAO,SAAP;MAAiB,gBAAgB,EAAC,aAAlC;MAAA,WACE,MAAC,KAAD,CAAO,KAAP;QAAA,WACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,aAAnB;UAAiC,SAAS,EAAEN;QAA5C,EADF,EAEE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,gBADP;UAEE,SAAS,EAAED,UAFb;UAGE,aAAa,EAAE;YAAEK,KAAK,EAAEA;UAAT;QAHjB,EAFF;MAAA,EADF,EASE,KAAC,KAAD,CAAO,KAAP;QAAa,aAAa,EAAE;UAAEgB,YAAY,EAAE;QAAhB,CAA5B;QAAA,UACE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,cAAnB;UAAkC,SAAS,EAAEnB;QAA7C;MADF,EATF;IAAA;EAFJ,EADF;AAmBD"},"metadata":{},"sourceType":"module"}