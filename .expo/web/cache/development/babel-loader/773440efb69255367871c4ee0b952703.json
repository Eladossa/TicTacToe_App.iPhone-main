{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/FAB/FABGroup.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport FAB from \"./FAB\";\nimport Text from \"../Typography/Text\";\nimport Card from \"../Card/Card\";\nimport { withTheme } from \"../../core/theming\";\n\nvar FABGroup = function (_React$Component) {\n  _inherits(FABGroup, _React$Component);\n\n  function FABGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FABGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FABGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      backdrop: new Animated.Value(0),\n      animations: []\n    };\n\n    _this.close = function () {\n      return _this.props.onStateChange({\n        open: false\n      });\n    };\n\n    _this.toggle = function () {\n      return _this.props.onStateChange({\n        open: !_this.props.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FABGroup, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.open === prevProps.open) {\n        return;\n      }\n\n      var scale = this.props.theme.animation.scale;\n\n      if (this.props.open) {\n        Animated.parallel([Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true\n        }), Animated.stagger(50 * scale, this.state.animations.map(function (animation) {\n          return Animated.timing(animation, {\n            toValue: 1,\n            duration: 150 * scale,\n            useNativeDriver: true\n          });\n        }).reverse())]).start();\n      } else {\n        Animated.parallel([Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true\n        })].concat(_toConsumableArray(this.state.animations.map(function (animation) {\n          return Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true\n          });\n        })))).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          icon = _this$props.icon,\n          open = _this$props.open,\n          _onPress = _this$props.onPress,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          fabStyle = _this$props.fabStyle,\n          visible = _this$props.visible;\n      var colors = theme.colors;\n      var labelColor = theme.dark ? colors.text : color(colors.text).fade(0.54).rgb().string();\n      var backdropOpacity = open ? this.state.backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1]\n      }) : this.state.backdrop;\n      var opacities = this.state.animations;\n      var scales = opacities.map(function (opacity) {\n        return open ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1]\n        }) : 1;\n      });\n      return React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this.close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        }\n      }, React.createElement(Animated.View, {\n        pointerEvents: open ? 'auto' : 'none',\n        style: [styles.backdrop, {\n          opacity: backdropOpacity,\n          backgroundColor: colors.backdrop\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        }\n      })), React.createElement(SafeAreaView, {\n        pointerEvents: \"box-none\",\n        style: styles.safeArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        }\n      }, React.createElement(View, {\n        pointerEvents: open ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        }\n      }, actions.map(function (it, i) {\n        return React.createElement(View, {\n          key: i,\n          style: styles.item,\n          pointerEvents: \"box-none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          }\n        }, it.label && React.createElement(Card, {\n          style: [styles.label, {\n            transform: [{\n              scale: scales[i]\n            }],\n            opacity: opacities[i]\n          }],\n          onPress: function onPress() {\n            it.onPress();\n\n            _this2.close();\n          },\n          accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: labelColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          }\n        }, it.label)), React.createElement(FAB, {\n          small: true,\n          icon: it.icon,\n          color: it.color,\n          style: [{\n            transform: [{\n              scale: scales[i]\n            }],\n            opacity: opacities[i],\n            backgroundColor: theme.colors.surface\n          }, it.style],\n          onPress: function onPress() {\n            it.onPress();\n\n            _this2.close();\n          },\n          accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          }\n        }));\n      })), React.createElement(FAB, {\n        onPress: function onPress() {\n          _onPress == null ? void 0 : _onPress();\n\n          _this2.toggle();\n        },\n        icon: icon,\n        color: this.props.color,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: \"button\",\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        style: [styles.fab, fabStyle],\n        visible: visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        animations: nextProps.actions.map(function (_, i) {\n          return prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0);\n        })\n      };\n    }\n  }]);\n\n  return FABGroup;\n}(React.Component);\n\nFABGroup.displayName = 'FAB.Group';\nexport default withTheme(FABGroup);\nexport { FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["React","color","FAB","Text","Card","withTheme","FABGroup","state","backdrop","Animated","Value","animations","close","_this","props","onStateChange","open","toggle","prevProps","scale","theme","animation","parallel","timing","toValue","duration","useNativeDriver","stagger","map","reverse","start","actions","icon","onPress","accessibilityLabel","style","fabStyle","visible","colors","labelColor","dark","text","fade","rgb","string","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","View","pointerEvents","styles","container","__source","fileName","lineNumber","TouchableWithoutFeedback","backgroundColor","SafeAreaView","safeArea","it","i","key","item","label","transform","_this2","accessibilityTraits","accessibilityComponentType","accessibilityRole","small","surface","fab","nextProps","prevState","_","Component","displayName","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginHorizontal","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    onPress: () => void;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  backdrop: Animated.Value;\n  animations: Animated.Value[];\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     open: false,\n *   };\n *\n *   render() {\n *     return (\n *       <Provider>\n *          <Portal>\n *            <FAB.Group\n *              open={this.state.open}\n *              icon={this.state.open ? 'today' : 'add'}\n *              actions={[\n *                { icon: 'add', onPress: () => console.log('Pressed add') },\n *                { icon: 'star', label: 'Star', onPress: () => console.log('Pressed star')},\n *                { icon: 'email', label: 'Email', onPress: () => console.log('Pressed email') },\n *                { icon: 'bell', label: 'Remind', onPress: () => console.log('Pressed notifications') },\n *              ]}\n *              onStateChange={({ open }) => this.setState({ open })}\n *              onPress={() => {\n *                if (this.state.open) {\n *                  // do something if the speed dial is open\n *                }\n *              }}\n *            />\n *          </Portal>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass FABGroup extends React.Component<Props, State> {\n  static displayName = 'FAB.Group';\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    return {\n      animations: nextProps.actions.map(\n        (_, i) =>\n          prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0)\n      ),\n    };\n  }\n\n  state: State = {\n    backdrop: new Animated.Value(0),\n    animations: [],\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.open === prevProps.open) {\n      return;\n    }\n\n    const { scale } = this.props.theme.animation;\n    if (this.props.open) {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          this.state.animations\n            .map(animation =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...this.state.animations.map(animation =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }\n\n  private close = () => this.props.onStateChange({ open: false });\n\n  private toggle = () => this.props.onStateChange({ open: !this.props.open });\n\n  render() {\n    const {\n      actions,\n      icon,\n      open,\n      onPress,\n      accessibilityLabel,\n      theme,\n      style,\n      fabStyle,\n      visible,\n    } = this.props;\n    const { colors } = theme;\n\n    const labelColor = theme.dark\n      ? colors.text\n      : color(colors.text)\n          .fade(0.54)\n          .rgb()\n          .string();\n    const backdropOpacity = open\n      ? this.state.backdrop.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, 1, 1],\n        })\n      : this.state.backdrop;\n\n    const opacities = this.state.animations;\n    const scales = opacities.map(opacity =>\n      open\n        ? opacity.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0.8, 1],\n          })\n        : 1\n    );\n\n    return (\n      <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n        <TouchableWithoutFeedback onPress={this.close}>\n          <Animated.View\n            pointerEvents={open ? 'auto' : 'none'}\n            style={[\n              styles.backdrop,\n              {\n                opacity: backdropOpacity,\n                backgroundColor: colors.backdrop,\n              },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n          <View pointerEvents={open ? 'box-none' : 'none'}>\n            {actions.map((it, i) => (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={styles.item}\n                pointerEvents=\"box-none\"\n              >\n                {it.label && (\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      this.close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                )}\n                <FAB\n                  small\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: theme.colors.surface,\n                      },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={() => {\n                    it.onPress();\n                    this.close();\n                  }}\n                  accessibilityLabel={\n                    typeof it.accessibilityLabel !== 'undefined'\n                      ? it.accessibilityLabel\n                      : it.label\n                  }\n                  accessibilityTraits=\"button\"\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                />\n              </View>\n            ))}\n          </View>\n          <FAB\n            onPress={() => {\n              onPress?.();\n              this.toggle();\n            }}\n            icon={icon}\n            color={this.props.color}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityTraits=\"button\"\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            style={[styles.fab, fabStyle]}\n            visible={visible}\n          />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}