{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Menu/Menu.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { withTheme } from \"../../core/theming\";\nimport Portal from \"../Portal/Portal\";\nimport Surface from \"../Surface\";\nimport MenuItem from \"./MenuItem\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"../../constants\";\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\nvar EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\nvar Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rendered: _this.props.visible,\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new Animated.Value(0),\n      scaleAnimation: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    };\n    _this.anchor = null;\n    _this.menu = null;\n\n    _this.isAnchorCoord = function () {\n      return !React.isValidElement(_this.props.anchor);\n    };\n\n    _this.measureMenuLayout = function () {\n      return new Promise(function (resolve) {\n        if (_this.menu) {\n          _this.menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this.measureAnchorLayout = function () {\n      return new Promise(function (resolve) {\n        var anchor = _this.props.anchor;\n\n        if (_this.isAnchorCoord()) {\n          resolve({\n            x: anchor.x,\n            y: anchor.y,\n            width: 0,\n            height: 0\n          });\n          return;\n        }\n\n        if (_this.anchor) {\n          _this.anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this.updateVisibility = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Promise.resolve());\n\n            case 2:\n              if (_this.props.visible) {\n                _this.show();\n              } else {\n                _this.hide();\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.isBrowser = function () {\n      return Platform.OS === 'web' && 'document' in global;\n    };\n\n    _this.focusFirstDOMNode = function (el) {\n      if (el && _this.isBrowser()) {\n        var node = findNodeHandle(el);\n        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        focusableNode == null ? void 0 : focusableNode.focus();\n      }\n    };\n\n    _this.handleDismiss = function () {\n      if (_this.props.visible) {\n        _this.props.onDismiss();\n      }\n\n      return true;\n    };\n\n    _this.handleKeypress = function (e) {\n      if (e.key === 'Escape') {\n        _this.props.onDismiss();\n      }\n    };\n\n    _this.attachListeners = function () {\n      BackHandler.addEventListener('hardwareBackPress', _this.handleDismiss);\n      Dimensions.addEventListener('change', _this.handleDismiss);\n      _this.isBrowser() && document.addEventListener('keyup', _this.handleKeypress);\n    };\n\n    _this.removeListeners = function () {\n      BackHandler.removeEventListener('hardwareBackPress', _this.handleDismiss);\n      Dimensions.removeEventListener('change', _this.handleDismiss);\n      _this.isBrowser() && document.removeEventListener('keyup', _this.handleKeypress);\n    };\n\n    _this.show = function _callee2() {\n      var windowLayout, _ref, _ref2, menuLayout, anchorLayout;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              windowLayout = Dimensions.get('window');\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([_this.measureMenuLayout(), _this.measureAnchorLayout()]));\n\n            case 3:\n              _ref = _context2.sent;\n              _ref2 = _slicedToArray(_ref, 2);\n              menuLayout = _ref2[0];\n              anchorLayout = _ref2[1];\n\n              if (!(!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this.isAnchorCoord() || !anchorLayout.height && !_this.isAnchorCoord())) {\n                _context2.next = 10;\n                break;\n              }\n\n              requestAnimationFrame(_this.show);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState(function () {\n                return {\n                  left: anchorLayout.x,\n                  top: anchorLayout.y,\n                  anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width\n                  },\n                  menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height\n                  }\n                };\n              }, function () {\n                _this.attachListeners();\n\n                var animation = _this.props.theme.animation;\n                Animated.parallel([Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start(function (_ref3) {\n                  var finished = _ref3.finished;\n\n                  if (finished) {\n                    _this.focusFirstDOMNode(_this.menu);\n                  }\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.hide = function () {\n      _this.removeListeners();\n\n      var animation = _this.props.theme.animation;\n      Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION * animation.scale,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (finished) {\n        if (finished) {\n          _this.setState({\n            menuLayout: {\n              width: 0,\n              height: 0\n            }\n          });\n\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this.focusFirstDOMNode(_this.anchor);\n\n          _this.setState({\n            rendered: false\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          anchor = _this$props.anchor,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          statusBarHeight = _this$props.statusBarHeight,\n          onDismiss = _this$props.onDismiss;\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n      var additionalVerticalValue = Platform.select({\n        android: statusBarHeight,\n        default: 0\n      });\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n      var windowLayout = Dimensions.get('window');\n      var positionTransforms = [];\n\n      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right > windowLayout.width - SCREEN_INDENT) {\n          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      var scrollableMenuHeight = 0;\n\n      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {\n        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n      }\n\n      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;\n\n      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]\n          })\n        });\n\n        if (top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]\n          })\n        });\n        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n        if (bottom > windowLayout.height - SCREEN_INDENT) {\n          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = _objectSpread({\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: theme.roundness\n      }, scrollableMenuHeight ? {\n        height: scrollableMenuHeight\n      } : {});\n\n      var positionStyle = _objectSpread({\n        top: this.isAnchorCoord() ? top : top + additionalVerticalValue\n      }, I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return React.createElement(View, {\n        ref: function ref(_ref5) {\n          _this2.anchor = _ref5;\n        },\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        }\n      }, this.isAnchorCoord() ? null : anchor, rendered ? React.createElement(Portal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        }\n      }, React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        }\n      })), React.createElement(View, {\n        ref: function ref(_ref4) {\n          _this2.menu = _ref4;\n        },\n        collapsable: false,\n        accessibilityViewIsModal: visible,\n        style: [styles.wrapper, positionStyle, style],\n        pointerEvents: visible ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: positionTransforms\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        }\n      }, React.createElement(Surface, {\n        style: [styles.shadowMenuContainer, shadowMenuContainerStyle, contentStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        }\n      }, scrollableMenuHeight && React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        }\n      }, children) || React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        }\n      }, children))))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.Item = MenuItem;\nMenu.defaultProps = {\n  statusBarHeight: APPROX_STATUSBAR_HEIGHT\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8\n  }\n});\nexport default withTheme(Menu);","map":{"version":3,"mappings":"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","names":["React","withTheme","Portal","Surface","MenuItem","APPROX_STATUSBAR_HEIGHT","SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","bezier","Menu","state","rendered","_this","props","visible","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","Value","scaleAnimation","ValueXY","x","y","anchor","menu","isAnchorCoord","isValidElement","measureMenuLayout","Promise","measureInWindow","resolve","measureAnchorLayout","updateVisibility","_context","show","hide","isBrowser","Platform","OS","global","focusFirstDOMNode","el","node","findNodeHandle","focusableNode","querySelector","focus","handleDismiss","onDismiss","handleKeypress","e","key","attachListeners","BackHandler","addEventListener","Dimensions","document","removeListeners","removeEventListener","windowLayout","get","_context2","all","_ref","_ref2","requestAnimationFrame","setState","animation","theme","parallel","timing","toValue","duration","scale","easing","useNativeDriver","start","finished","setValue","prevProps","contentStyle","style","children","statusBarHeight","additionalVerticalValue","select","android","default","scaleTransforms","scaleX","interpolate","inputRange","outputRange","scaleY","positionTransforms","push","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","roundness","positionStyle","I18nManager","isRTL","View","ref","_this2","collapsable","__source","fileName","lineNumber","TouchableWithoutFeedback","onPress","StyleSheet","absoluteFill","accessibilityViewIsModal","styles","wrapper","pointerEvents","shadowMenuContainer","ScrollView","Fragment","nextProps","prevState","Component","Item","defaultProps","create","position","paddingVertical","elevation"],"sources":["Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Animated,\n  BackHandler,\n  Dimensions,\n  Easing,\n  I18nManager,\n  LayoutRectangle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  ScrollView,\n  findNodeHandle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport { Theme, $Omit } from '../../types';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport MenuItem, { MenuItem as _MenuItem } from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean;\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n   */\n  anchor: React.ReactNode | { x: number; y: number };\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight?: number;\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style of menu's inner content.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype Layout = $Omit<$Omit<LayoutRectangle, 'x'>, 'y'>;\n\ntype State = {\n  rendered: boolean;\n  top: number;\n  left: number;\n  menuLayout: Layout;\n  anchorLayout: Layout;\n  opacityAnimation: Animated.Value;\n  scaleAnimation: Animated.ValueXY;\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _openMenu = () => this.setState({ visible: true });\n *\n *   _closeMenu = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Provider>\n *         <View\n *           style={{\n *             paddingTop: 50,\n *             flexDirection: 'row',\n *             justifyContent: 'center'\n *           }}>\n *           <Menu\n *             visible={this.state.visible}\n *             onDismiss={this._closeMenu}\n *             anchor={\n *               <Button onPress={this._openMenu}>Show menu</Button>\n *             }\n *           >\n *             <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *             <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *             <Divider />\n *             <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *           </Menu>\n *         </View>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.tsx\n  static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  private anchor?: View | null = null;\n  private menu?: View | null = null;\n\n  private isAnchorCoord = () => !React.isValidElement(this.props.anchor);\n\n  private measureMenuLayout = () =>\n    new Promise<LayoutRectangle>(resolve => {\n      if (this.menu) {\n        this.menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private measureAnchorLayout = () =>\n    new Promise<LayoutRectangle>(resolve => {\n      const { anchor } = this.props;\n      if (this.isAnchorCoord()) {\n        // @ts-ignore\n        resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n        return;\n      }\n\n      if (this.anchor) {\n        this.anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private isBrowser = () => Platform.OS === 'web' && 'document' in global;\n\n  private focusFirstDOMNode = (el: View | null | undefined) => {\n    if (el && this.isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      focusableNode?.focus();\n    }\n  };\n\n  private handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss();\n    }\n    return true;\n  };\n\n  private handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss();\n    }\n  };\n\n  private attachListeners = () => {\n    BackHandler.addEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.addEventListener('change', this.handleDismiss);\n\n    this.isBrowser() && document.addEventListener('keyup', this.handleKeypress);\n  };\n\n  private removeListeners = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.handleDismiss);\n    Dimensions.removeEventListener('change', this.handleDismiss);\n\n    this.isBrowser() &&\n      document.removeEventListener('keyup', this.handleKeypress);\n  };\n\n  private show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this.measureMenuLayout(),\n      this.measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      (!anchorLayout.width && !this.isAnchorCoord()) ||\n      (!anchorLayout.height && !this.isAnchorCoord())\n    ) {\n      requestAnimationFrame(this.show);\n      return;\n    }\n\n    this.setState(\n      () => ({\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      }),\n      () => {\n        this.attachListeners();\n\n        const { animation } = this.props.theme;\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this.focusFirstDOMNode(this.menu);\n          }\n        });\n      }\n    );\n  };\n\n  private hide = () => {\n    this.removeListeners();\n\n    const { animation } = this.props.theme;\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION * animation.scale,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(finished => {\n      if (finished) {\n        this.setState({ menuLayout: { width: 0, height: 0 } });\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this.focusFirstDOMNode(this.anchor);\n        this.setState({ rendered: false });\n      }\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      anchor,\n      contentStyle,\n      style,\n      children,\n      theme,\n      statusBarHeight,\n      onDismiss,\n    } = this.props;\n\n    const {\n      rendered,\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n    } = this.state;\n\n    let { left, top } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    const windowLayout = Dimensions.get('window');\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right > windowLayout.width - SCREEN_INDENT) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // If the menu is larger than available vertical space,\n    // calculate the height of scrollable view\n    let scrollableMenuHeight = 0;\n\n    // Check if the menu should be scrollable\n    if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And bottom side of the screen has more space than top side\n      top <= windowLayout.height - top\n    ) {\n      // Scrollable menu should be below the anchor (expands downwards)\n      scrollableMenuHeight =\n        windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n    } else if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And top side of the screen has more space than bottom side\n      top >= windowLayout.height - top &&\n      // And menu overflows from top side\n      top <=\n        menuLayout.height -\n          anchorLayout.height +\n          SCREEN_INDENT -\n          additionalVerticalValue\n    ) {\n      // Scrollable menu should be above the anchor (expands upwards)\n      scrollableMenuHeight =\n        top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n    }\n\n    // Scrollable menu max height\n    scrollableMenuHeight =\n      scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n        ? windowLayout.height - 2 * SCREEN_INDENT\n        : scrollableMenuHeight;\n\n    // Menu is typically positioned below the element that generates it\n    // So first check if it fits below the anchor (expands downwards)\n    if (\n      // Check if menu fits vertically\n      top <=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue ||\n      // Or if the menu overflows from bottom side\n      (top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n        // And bottom side of the screen has more space than top side\n        top <= windowLayout.height - top)\n    ) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n      const bottom =\n        top +\n        (scrollableMenuHeight || menuLayout.height) +\n        additionalVerticalValue;\n\n      // Check if menu position has enough space from bottom side\n      if (bottom > windowLayout.height - SCREEN_INDENT) {\n        top =\n          scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n            ? -SCREEN_INDENT * 2\n            : windowLayout.height -\n              menuLayout.height -\n              SCREEN_INDENT -\n              additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n      ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n    };\n\n    const positionStyle = {\n      top: this.isAnchorCoord() ? top : top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n\n    return (\n      <View\n        ref={ref => {\n          this.anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {this.isAnchorCoord() ? null : anchor}\n        {rendered ? (\n          <Portal>\n            <TouchableWithoutFeedback onPress={onDismiss}>\n              <View style={StyleSheet.absoluteFill} />\n            </TouchableWithoutFeedback>\n            <View\n              ref={ref => {\n                this.menu = ref;\n              }}\n              collapsable={false}\n              accessibilityViewIsModal={visible}\n              style={[styles.wrapper, positionStyle, style]}\n              pointerEvents={visible ? 'box-none' : 'none'}\n            >\n              <Animated.View style={{ transform: positionTransforms }}>\n                <Surface\n                  style={\n                    [\n                      styles.shadowMenuContainer,\n                      shadowMenuContainerStyle,\n                      contentStyle,\n                    ] as StyleProp<ViewStyle>\n                  }\n                >\n                  {(scrollableMenuHeight && (\n                    <ScrollView>{children}</ScrollView>\n                  )) || <React.Fragment>{children}</React.Fragment>}\n                </Surface>\n              </Animated.View>\n            </View>\n          </Portal>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8,\n  },\n});\n\nexport default withTheme(Menu);\n"]},"metadata":{},"sourceType":"module"}