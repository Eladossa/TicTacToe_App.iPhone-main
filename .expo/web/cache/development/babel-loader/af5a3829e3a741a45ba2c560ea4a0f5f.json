{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableTitle.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableTitle = function (_React$Component) {\n  _inherits(DataTableTitle, _React$Component);\n\n  function DataTableTitle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataTableTitle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataTableTitle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spinAnim: new Animated.Value(_this.props.sortDirection === 'ascending' ? 0 : 1)\n    };\n    return _this;\n  }\n\n  _createClass(DataTableTitle, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.sortDirection === this.props.sortDirection) {\n        return;\n      }\n\n      Animated.timing(this.state.spinAnim, {\n        toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numeric = _this$props.numeric,\n          children = _this$props.children,\n          onPress = _this$props.onPress,\n          sortDirection = _this$props.sortDirection,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          numberOfLines = _this$props.numberOfLines,\n          rest = _objectWithoutProperties(_this$props, [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"theme\", \"style\", \"numberOfLines\"]);\n\n      var textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      var spin = this.state.spinAnim.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '180deg']\n      });\n      var icon = sortDirection ? React.createElement(Animated.View, {\n        style: [styles.icon, {\n          transform: [{\n            rotate: spin\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, React.createElement(MaterialCommunityIcon, {\n        name: \"arrow-down\",\n        size: 16,\n        color: theme.colors.text,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      })) : null;\n      return React.createElement(TouchableWithoutFeedback, _extends({\n        disabled: !onPress,\n        onPress: onPress\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        }\n      }), React.createElement(View, {\n        style: [styles.container, numeric && styles.right, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        }\n      }, icon, React.createElement(Text, {\n        style: [styles.cell, sortDirection ? styles.sorted : {\n          color: textColor\n        }],\n        numberOfLines: numberOfLines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        }\n      }, children)));\n    }\n  }]);\n\n  return DataTableTitle;\n}(React.Component);\n\nDataTableTitle.displayName = 'DataTable.Title';\nDataTableTitle.defaultProps = {\n  numberOfLines: 1\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(DataTableTitle);\nexport { DataTableTitle };","map":{"version":3,"mappings":"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","names":["React","color","MaterialCommunityIcon","Text","withTheme","DataTableTitle","state","spinAnim","Animated","Value","_this","props","sortDirection","prevProps","timing","toValue","duration","useNativeDriver","start","numeric","children","onPress","theme","style","numberOfLines","rest","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","View","styles","transform","rotate","__source","fileName","lineNumber","name","size","direction","I18nManager","isRTL","TouchableWithoutFeedback","disabled","container","right","cell","sorted","Component","displayName","defaultProps","StyleSheet","create","flex","flexDirection","alignContent","paddingVertical","justifyContent","height","lineHeight","fontSize","fontWeight","alignItems","marginLeft"],"sources":["DataTableTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  spinAnim: Animated.Value;\n};\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <MaterialCommunityIcon\n          name=\"arrow-down\"\n          size={16}\n          color={theme.colors.text}\n          direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n        />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"module"}