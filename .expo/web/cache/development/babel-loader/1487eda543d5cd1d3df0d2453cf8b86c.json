{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Board from \"./Board\";\nimport Statistics from \"./Statistics\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { mainApp } from \"./styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Game(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      playerTurn = _useState2[0],\n      changeTurn = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      end = _useState4[0],\n      endGame = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      modal = _useState6[0],\n      toggleModal = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      result = _useState8[0],\n      setResult = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      turns = _useState10[0],\n      setTurn = _useState10[1];\n\n  var togglePlayer = function togglePlayer() {\n    return changeTurn(!playerTurn);\n  };\n\n  var toggleGame = function toggleGame() {\n    return endGame(!end);\n  };\n\n  var triggerModal = function triggerModal() {\n    return toggleModal(!modal);\n  };\n\n  var newGame = function newGame() {\n    setTurn({});\n    endGame(false);\n    toggleModal(false);\n    changeTurn(true);\n  };\n\n  var finishGame = function finishGame() {\n    endGame();\n    triggerModal();\n  };\n\n  function checkWinner() {\n    var winningCombos = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (var i = 0; i < winningCombos.length; i++) {\n      var _winningCombos$i = _slicedToArray(winningCombos[i], 3),\n          a = _winningCombos$i[0],\n          b = _winningCombos$i[1],\n          c = _winningCombos$i[2];\n\n      if (turns[a] === turns[b] && turns[b] === turns[c] && a in turns && b in turns && c in turns) {\n        setResult(playerTurn ? 'Congratulations Player 1!' : 'Nice going Player 2!');\n        finishGame();\n      }\n    }\n\n    if (Object.keys(turns).length === 9) {\n      setResult('Tie Game!');\n      finishGame();\n    }\n  }\n\n  function checkTurn(value) {\n    var tempTurns = turns;\n    tempTurns[value] = playerTurn ? 'X' : 'O';\n    setTurn(_objectSpread({}, tempTurns));\n    checkWinner();\n    togglePlayer();\n  }\n\n  return _jsxs(View, {\n    style: mainApp.container,\n    children: [_jsx(Text, {\n      style: mainApp.paragraph,\n      children: \"Let's play Tic-Tac-Toe\"\n    }), !end && _jsx(Board, {\n      turns: turns,\n      checkTurn: checkTurn\n    }), _jsx(Modal, {\n      animationType: 'slide',\n      visible: modal,\n      children: _jsxs(View, {\n        style: mainApp.centeredView,\n        children: [_jsxs(View, {\n          style: mainApp.modalView,\n          children: [_jsx(Text, {\n            style: mainApp.h2,\n            children: result\n          }), _jsx(TouchableOpacity, {\n            style: mainApp.purpleButton,\n            onPress: newGame,\n            children: _jsx(Text, {\n              style: mainApp.whiteButtonText,\n              children: \"Start a new game\"\n            })\n          })]\n        }), _jsx(View, {\n          style: mainApp.modalView,\n          children: _jsx(TouchableOpacity, {\n            style: mainApp.blueButton,\n            onPress: function onPress() {\n              return navigation.navigate('Statistics');\n            },\n            children: _jsx(Text, {\n              style: mainApp.whiteButtonText,\n              children: \"show statistics\"\n            })\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: mainApp.legend,\n      children: [_jsx(Text, {\n        style: mainApp.subheader,\n        children: \"X - Player 1\"\n      }), _jsx(Text, {\n        style: mainApp.subheader,\n        children: \"O - Player 2\"\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","Board","Statistics","mainApp","Game","navigation","useState","playerTurn","changeTurn","end","endGame","modal","toggleModal","result","setResult","turns","setTurn","togglePlayer","toggleGame","triggerModal","newGame","finishGame","checkWinner","winningCombos","i","length","a","b","c","Object","keys","checkTurn","value","tempTurns","container","paragraph","centeredView","modalView","h2","purpleButton","whiteButtonText","blueButton","navigate","legend","subheader"],"sources":["C:/Users/Elad Hatan/Desktop/TicTacToe_App/components/Game.js"],"sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport Statistics from './Statistics';\r\nimport { Text, View, Modal, TouchableOpacity } from 'react-native';\r\nimport { mainApp } from './styles/styles';\r\n\r\nexport default function Game({ navigation }) {\r\n  //Player, game, and modal states\r\n  const [playerTurn, changeTurn] = useState(true);\r\n  const [end, endGame] = useState(false);\r\n  const [modal, toggleModal] = useState(false);\r\n\r\n  //Result message for winner and tie games\r\n  const [result, setResult] = useState('');\r\n\r\n  //Turns dictionary to store turns taken\r\n  const [turns, setTurn] = useState({});\r\n\r\n  //Hook toggles for components to render and switch players\r\n  const togglePlayer = () => changeTurn(!playerTurn);\r\n  const toggleGame = () => endGame(!end);\r\n  const triggerModal = () => toggleModal(!modal);\r\n\r\n  //Hook to set a new game\r\n  const newGame = () => {\r\n    setTurn({});\r\n    endGame(false);\r\n    toggleModal(false);\r\n    changeTurn(true);\r\n  };\r\n\r\n  //Hook to end the game and render components needed\r\n  const finishGame = () => {\r\n    endGame();\r\n    triggerModal();\r\n  };\r\n\r\n  function checkWinner() {\r\n    const winningCombos = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for (let i = 0; i < winningCombos.length; i++) {\r\n      const [a, b, c] = winningCombos[i];\r\n      if (\r\n        turns[a] === turns[b] &&\r\n        turns[b] === turns[c] &&\r\n        a in turns &&\r\n        b in turns &&\r\n        c in turns\r\n      ) {\r\n        //Winner is determined\r\n        setResult(\r\n          playerTurn ? 'Congratulations Player 1!' : 'Nice going Player 2!'\r\n        );\r\n        finishGame();\r\n      }\r\n    }\r\n\r\n    //when the board is full with no winner, it results in a tie\r\n    if (Object.keys(turns).length === 9) {\r\n      setResult('Tie Game!');\r\n      finishGame();\r\n    }\r\n  }\r\n\r\n  function checkTurn(value) {\r\n    const tempTurns = turns;\r\n    tempTurns[value] = playerTurn ? 'X' : 'O';\r\n\r\n    //Sets the turn state with the new value added\r\n    setTurn({ ...tempTurns });\r\n\r\n    //Here we call a function to check if the game is won abd change players\r\n    checkWinner();\r\n    togglePlayer();\r\n  }\r\n\r\n  return (\r\n    <View style={mainApp.container}>\r\n      <Text style={mainApp.paragraph}>Let's play Tic-Tac-Toe</Text>\r\n      {!end && <Board turns={turns} checkTurn={checkTurn} />}\r\n      <Modal animationType={'slide'} visible={modal}>\r\n        <View style={mainApp.centeredView}>\r\n          <View style={mainApp.modalView}>\r\n            <Text style={mainApp.h2}>{result}</Text>\r\n            <TouchableOpacity style={mainApp.purpleButton} onPress={newGame}>\r\n              <Text style={mainApp.whiteButtonText}>Start a new game</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View style={mainApp.modalView}>\r\n            <TouchableOpacity\r\n              style={mainApp.blueButton}\r\n              onPress={() => navigation.navigate('Statistics')}\r\n            >\r\n              <Text style={mainApp.whiteButtonText}>show statistics</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <View style={mainApp.legend}>\r\n        <Text style={mainApp.subheader}>X - Player 1</Text>\r\n        <Text style={mainApp.subheader}>O - Player 2</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}