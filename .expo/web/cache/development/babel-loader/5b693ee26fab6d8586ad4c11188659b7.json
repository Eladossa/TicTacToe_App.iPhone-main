{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Row, Rows, TableWrapper } from 'react-native-table-component';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"../styles/statsStyle\";\nimport { mainApp } from \"../styles/styles\";\nimport { Button } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Statistics = function Statistics(_ref) {\n  var _route$params;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var statsArray = (_route$params = route.params) == null ? void 0 : _route$params.stats;\n  var copiedStatist = JSON.parse(JSON.stringify(statsArray));\n  var shortStats = copiedStatist.reduce(function (acc, curItem) {\n    var userWins = acc;\n    delete acc.game_Number;\n    userWins.user1_Wins += curItem.user1_Wins;\n    userWins.user2_Wins += curItem.user2_Wins;\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, 'Games', statsArray.length));\n  });\n  var statisValues = statsArray.map(function (obj) {\n    if (obj.user1_Wins === 1) {\n      return [obj.game_Number, 'Player 1', 'Player 2'];\n    } else if (obj.user1_Wins === 0 && obj.user2_Wins === 0) {\n      return [obj.game_Number, 'none', 'none'];\n    } else {\n      return [obj.game_Number, 'Player 2', 'Player 1'];\n    }\n  });\n  console.log('stats_Values', statisValues);\n  var CONTENT = {\n    tableHead: ['Game number', 'Winner', 'Looser'],\n    widthArr: [100, 135, 135],\n    statisValues: statisValues\n  };\n\n  function onPressHandler() {\n    navigation.replace('Game Screen');\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: mainApp.upperContainer,\n      children: _jsx(TouchableOpacity, {\n        style: mainApp.showStatisBtn,\n        onPress: function onPress() {\n          onPressHandler();\n        },\n        children: _jsx(Text, {\n          style: mainApp.whiteButtonText,\n          children: \"Back to Game Board\"\n        })\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(ScrollView, {\n        horizontal: true,\n        children: _jsxs(View, {\n          children: [_jsx(Table, {\n            borderStyle: {\n              borderColor: '#c8e1ff',\n              borderWidth: 3\n            },\n            children: _jsx(Row, {\n              data: CONTENT.tableHead,\n              widthArr: CONTENT.widthArr,\n              style: styles.head,\n              textStyle: styles.text\n            })\n          }), _jsx(ScrollView, {\n            style: styles.dataWrapper,\n            children: _jsx(Table, {\n              borderStyle: {\n                borderColor: '#c8e1ff',\n                borderWidth: 3\n              },\n              children: CONTENT.statisValues.map(function (dataRow, index) {\n                return _jsx(Row, {\n                  data: dataRow,\n                  widthArr: CONTENT.widthArr,\n                  style: [styles.row, index % 2 && {\n                    backgroundColor: '#ffffff'\n                  }],\n                  textStyle: styles.text\n                }, index);\n              })\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\n\nexport default Statistics;\n{}","map":{"version":3,"names":["React","useState","useEffect","Table","Row","Rows","TableWrapper","styles","mainApp","Button","Statistics","route","navigation","statsArray","params","stats","copiedStatist","JSON","parse","stringify","shortStats","reduce","acc","curItem","userWins","game_Number","user1_Wins","user2_Wins","length","statisValues","map","obj","console","log","CONTENT","tableHead","widthArr","onPressHandler","replace","upperContainer","showStatisBtn","whiteButtonText","container","borderColor","borderWidth","head","text","dataWrapper","dataRow","index","row","backgroundColor"],"sources":["C:/Users/Elad Hatan/Desktop/TicTacToe_App.iPhone-main3/components/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n//import structuredClone from '@ungap/structured-clone';\r\nimport { Table, Row, Rows, TableWrapper } from 'react-native-table-component';\r\nimport { View, ScrollView, Text, TouchableOpacity } from 'react-native';\r\nimport styles from '../styles/statsStyle';\r\nimport { mainApp } from '../styles/styles';\r\n\r\nimport { Button } from 'react-native-paper';\r\n\r\nconst Statistics = ({ route, navigation }) => {\r\n  const statsArray = route.params?.stats;\r\n  //const copiedStatist = structuredClone(statsArray);\r\n  const copiedStatist = JSON.parse(JSON.stringify(statsArray));\r\n\r\n  const shortStats = copiedStatist.reduce((acc, curItem) => {\r\n    const userWins = acc;\r\n    delete acc.game_Number;\r\n    userWins.user1_Wins += curItem.user1_Wins;\r\n    userWins.user2_Wins += curItem.user2_Wins;\r\n    return { ...acc, ['Games']: statsArray.length };\r\n  });\r\n\r\n  const statisValues = statsArray.map(function (obj) {\r\n    if (obj.user1_Wins === 1) {\r\n      return [obj.game_Number, 'Player 1', 'Player 2'];\r\n    } else if (obj.user1_Wins === 0 && obj.user2_Wins === 0) {\r\n      return [obj.game_Number, 'none', 'none'];\r\n    } else {\r\n      return [obj.game_Number, 'Player 2', 'Player 1'];\r\n    }\r\n  });\r\n  console.log('stats_Values', statisValues);\r\n\r\n  const CONTENT = {\r\n    tableHead: ['Game number', 'Winner', 'Looser'],\r\n    widthArr: [100, 135, 135],\r\n    statisValues,\r\n  };\r\n  function onPressHandler() {\r\n    navigation.replace('Game Screen');\r\n  }\r\n  return (\r\n    <>\r\n      <View style={mainApp.upperContainer}>\r\n        <TouchableOpacity\r\n          style={mainApp.showStatisBtn}\r\n          onPress={() => {\r\n            onPressHandler();\r\n          }}\r\n        >\r\n          <Text style={mainApp.whiteButtonText}>Back to Game Board</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.container}>\r\n        <ScrollView horizontal={true}>\r\n          <View>\r\n            <Table borderStyle={{ borderColor: '#c8e1ff', borderWidth: 3 }}>\r\n              <Row\r\n                data={CONTENT.tableHead}\r\n                widthArr={CONTENT.widthArr}\r\n                style={styles.head}\r\n                textStyle={styles.text}\r\n              />\r\n            </Table>\r\n            <ScrollView style={styles.dataWrapper}>\r\n              <Table borderStyle={{ borderColor: '#c8e1ff', borderWidth: 3 }}>\r\n                {CONTENT.statisValues.map((dataRow, index) => (\r\n                  <Row\r\n                    key={index}\r\n                    data={dataRow}\r\n                    widthArr={CONTENT.widthArr}\r\n                    style={[\r\n                      styles.row,\r\n                      index % 2 && { backgroundColor: '#ffffff' },\r\n                    ]}\r\n                    textStyle={styles.text}\r\n                  />\r\n                ))}\r\n              </Table>\r\n            </ScrollView>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\nexport default Statistics;\r\n\r\n{\r\n  /* <View\r\n        style={{\r\n          flexDirection: 'row',\r\n        }}\r\n      >\r\n        <View style={styles.title}>\r\n          <Text>{'item1'}</Text>\r\n        </View>\r\n        <View style={styles.result}>\r\n          <Text>{'item2'}</Text>\r\n        </View>\r\n      </View>\r\n      <Text style={styles.statsText}>\r\n        <span style={styles.title}>Player 1 wins</span>\r\n        <span style={styles.result}>{shortStats.user1_Wins}</span>\r\n      </Text>\r\n\r\n      <Text>\r\n        Player 2 wins <span>{shortStats.user2_Wins}</span>\r\n      </Text>\r\n      <Text>\r\n        Total games <span>{shortStats.Games}</span>\r\n      </Text> */\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}