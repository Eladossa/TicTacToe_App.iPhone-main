{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Avatar/AvatarImage.tsx\";\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nvar defaultSize = 64;\n\nvar AvatarImage = function (_React$Component) {\n  _inherits(AvatarImage, _React$Component);\n\n  function AvatarImage() {\n    _classCallCheck(this, AvatarImage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AvatarImage).apply(this, arguments));\n  }\n\n  _createClass(AvatarImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$size = _this$props.size,\n          size = _this$props$size === void 0 ? defaultSize : _this$props$size,\n          source = _this$props.source,\n          style = _this$props.style,\n          theme = _this$props.theme;\n      var colors = theme.colors;\n\n      var _ref = StyleSheet.flatten(style) || {},\n          _ref$backgroundColor = _ref.backgroundColor,\n          backgroundColor = _ref$backgroundColor === void 0 ? colors.primary : _ref$backgroundColor;\n\n      return React.createElement(View, {\n        style: [{\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor: backgroundColor\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, React.createElement(Image, {\n        source: source,\n        style: {\n          width: size,\n          height: size,\n          borderRadius: size / 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }));\n    }\n  }]);\n\n  return AvatarImage;\n}(React.Component);\n\nAvatarImage.displayName = 'Avatar.Image';\nAvatarImage.defaultProps = {\n  size: defaultSize\n};\nexport default withTheme(AvatarImage);","map":{"version":3,"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AASA,SAASC,SAAT;AAGA,IAAMC,WAAW,GAAG,EAApB;;IAqCMC,W;;;;;;;;;;;6BAOK;MAAA,kBAC8C,KAAKC,KADnD;MAAA,mCACCC,IADD;MAAA,IACCA,IADD,iCACQH,WADR;MAAA,IACqBI,MADrB,eACqBA,MADrB;MAAA,IAC6BC,KAD7B,eAC6BA,KAD7B;MAAA,IACoCC,KADpC,eACoCA,KADpC;MAAA,IAECC,MAFD,GAEYD,KAFZ,CAECC,MAFD;;MAAA,WAKLC,UAAU,CAACC,OAAXD,CAAmBH,KAAnBG,KAA6B,EALxB;MAAA,gCAICE,eAJD;MAAA,IAICA,eAJD,qCAImBH,MAAM,CAACI,OAJ1B;;MAOP,OACEb,oBAACc,IAAD;QACEP,KAAK,EAAE,CACL;UACEQ,KAAK,EAAEV,IADT;UAEEW,MAAM,EAAEX,IAFV;UAGEY,YAAY,EAAEZ,IAAI,GAAG,CAHvB;UAIEO,eAAe,EAAfA;QAJF,CADK,EAOLL,KAPK,CADT;QAAAW;UAAAC;UAAAC;QAAA;MAAA,GAWEpB,oBAACqB,KAAD;QACEf,MAAM,EAAEA,MADV;QAEEC,KAAK,EAAE;UAAEQ,KAAK,EAAEV,IAAT;UAAeW,MAAM,EAAEX,IAAvB;UAA6BY,YAAY,EAAEZ,IAAI,GAAG;QAAlD,CAFT;QAAAa;UAAAC;UAAAC;QAAA;MAAA,EAXF,CADF;;;;;EAdsBpB,KAAK,CAACsB,S;;AAA1BnB,W,CACGoB,WADHpB,GACiB,cADjBA;AAAAA,W,CAGGqB,YAHHrB,GAGkB;EACpBE,IAAI,EAAEH;AADc,CAHlBC;AAmCN,eAAeF,SAAS,CAACE,WAAD,CAAxB","names":["React","withTheme","defaultSize","AvatarImage","props","size","source","style","theme","colors","StyleSheet","flatten","backgroundColor","primary","View","width","height","borderRadius","__source","fileName","lineNumber","Image","Component","displayName","defaultProps"],"sources":["AvatarImage.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  ImageSourcePropType,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\nconst defaultSize = 64;\n\ntype Props = {\n  /**\n   * Image to display for the `Avatar`.\n   */\n  source: ImageSourcePropType;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * ```\n */\nclass AvatarImage extends React.Component<Props> {\n  static displayName = 'Avatar.Image';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const { size = defaultSize, source, style, theme } = this.props;\n    const { colors } = theme;\n\n    const { backgroundColor = colors.primary } =\n      StyleSheet.flatten(style) || {};\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          style,\n        ]}\n      >\n        <Image\n          source={source}\n          style={{ width: size, height: size, borderRadius: size / 2 }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default withTheme(AvatarImage);\n"]},"metadata":{},"sourceType":"module"}