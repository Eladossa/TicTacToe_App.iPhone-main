{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarBackAction.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AppbarAction from \"./AppbarAction\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\n\nvar AppbarBackAction = function (_React$Component) {\n  _inherits(AppbarBackAction, _React$Component);\n\n  function AppbarBackAction() {\n    _classCallCheck(this, AppbarBackAction);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppbarBackAction).apply(this, arguments));\n  }\n\n  _createClass(AppbarBackAction, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppbarAction, _extends({}, this.props, {\n        icon: function icon(_ref) {\n          var size = _ref.size,\n              color = _ref.color;\n          return Platform.OS === 'ios' ? React.createElement(View, {\n            style: [styles.wrapper, {\n              width: size,\n              height: size,\n              transform: [{\n                scaleX: I18nManager.isRTL ? -1 : 1\n              }]\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            }\n          }, React.createElement(Image, {\n            source: require(\"../../assets/back-chevron.png\"),\n            style: [styles.icon, {\n              tintColor: color\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            }\n          })) : React.createElement(MaterialCommunityIcon, {\n            name: \"arrow-left\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        }\n      }));\n    }\n  }]);\n\n  return AppbarBackAction;\n}(React.Component);\n\nAppbarBackAction.displayName = 'Appbar.BackAction';\nAppbarBackAction.defaultProps = {\n  accessibilityLabel: 'Back'\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain'\n  }\n});\nexport default AppbarBackAction;","map":{"version":3,"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAWA,OAAOC,YAAP;AACA,OAAOC,qBAAP;;IAgCMC,gB;;;;;;;;;;;6BAOK;MACP,OACEH,oBAACC,YAAD,eACM,KAAKG,KADX;QAEEC,IAAI,EAAE;UAAA,IAAGC,IAAH,QAAGA,IAAH;UAAA,IAASC,KAAT,QAASA,KAAT;UAAA,OACJC,QAAQ,CAACC,EAATD,KAAgB,KAAhBA,GACER,oBAACU,IAAD;YACEC,KAAK,EAAE,CACLC,MAAM,CAACC,OADF,EAEL;cACEC,KAAK,EAAER,IADT;cAEES,MAAM,EAAET,IAFV;cAGEU,SAAS,EAAE,CAAC;gBAAEC,MAAM,EAAEC,WAAW,CAACC,KAAZD,GAAoB,CAAC,CAArBA,GAAyB;cAAnC,CAAD;YAHb,CAFK,CADT;YAAAE;cAAAC;cAAAC;YAAA;UAAA,GAUEtB,oBAACuB,KAAD;YACEC,MAAM,EAAEC,OAAO,iCADjB;YAEEd,KAAK,EAAE,CAACC,MAAM,CAACP,IAAR,EAAc;cAAEqB,SAAS,EAAEnB;YAAb,CAAd,CAFT;YAAAa;cAAAC;cAAAC;YAAA;UAAA,EAVF,CADFd,GAiBER,oBAACE,qBAAD;YACEyB,IAAI,EAAC,YADP;YAEEpB,KAAK,EAAEA,KAFT;YAGED,IAAI,EAAEA,IAHR;YAIEsB,SAAS,EAAEV,WAAW,CAACC,KAAZD,GAAoB,KAApBA,GAA4B,KAJzC;YAAAE;cAAAC;cAAAC;YAAA;UAAA,EAlBE;QAFR;QAAAF;UAAAC;UAAAC;QAAA;MAAA,GADF;;;;;EAR2BtB,KAAK,CAAC6B,S;;AAA/B1B,gB,CACG2B,WADH3B,GACiB,mBADjBA;AAAAA,gB,CAGG4B,YAHH5B,GAGkB;EACpB6B,kBAAkB,EAAE;AADA,CAHlB7B;AA0CN,IAAMS,MAAM,GAAGqB,UAAU,CAACC,MAAXD,CAAkB;EAC/BpB,OAAO,EAAE;IACPsB,UAAU,EAAE,QADL;IAEPC,cAAc,EAAE;EAFT,CADsB;EAK/B/B,IAAI,EAAE;IACJU,MAAM,EAAE,EADJ;IAEJD,KAAK,EAAE,EAFH;IAGJuB,UAAU,EAAE;EAHR;AALyB,CAAlBJ,CAAf;AAYA,eAAe9B,gBAAf","names":["React","AppbarAction","MaterialCommunityIcon","AppbarBackAction","props","icon","size","color","Platform","OS","View","style","styles","wrapper","width","height","transform","scaleX","I18nManager","isRTL","__source","fileName","lineNumber","Image","source","require","tintColor","name","direction","Component","displayName","defaultProps","accessibilityLabel","StyleSheet","create","alignItems","justifyContent","resizeMode"],"sources":["AppbarBackAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Image,\n  I18nManager,\n  StyleSheet,\n  Platform,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { $Omit } from './../../types';\nimport AppbarAction from './AppbarAction';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = $Omit<\n  React.ComponentProps<typeof AppbarAction> & {\n    /**\n     *  Custom color for back icon.\n     */\n    color?: string;\n    /**\n     * Optional icon size.\n     */\n    size?: number;\n    /**\n     * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n     */\n    disabled?: boolean;\n    /**\n     * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Function to execute on press.\n     */\n    onPress?: () => void;\n    style?: StyleProp<ViewStyle>;\n  },\n  'icon'\n>;\n\n/**\n * A component used to display a back button in the appbar.\n */\nclass AppbarBackAction extends React.Component<Props> {\n  static displayName = 'Appbar.BackAction';\n\n  static defaultProps = {\n    accessibilityLabel: 'Back',\n  };\n\n  render() {\n    return (\n      <AppbarAction\n        {...this.props}\n        icon={({ size, color }: { size: number; color: string }) =>\n          Platform.OS === 'ios' ? (\n            <View\n              style={[\n                styles.wrapper,\n                {\n                  width: size,\n                  height: size,\n                  transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n                },\n              ]}\n            >\n              <Image\n                source={require('../../assets/back-chevron.png')}\n                style={[styles.icon, { tintColor: color }]}\n              />\n            </View>\n          ) : (\n            <MaterialCommunityIcon\n              name=\"arrow-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )\n        }\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: 21,\n    width: 21,\n    resizeMode: 'contain',\n  },\n});\n\nexport default AppbarBackAction;\n"]},"metadata":{},"sourceType":"module"}