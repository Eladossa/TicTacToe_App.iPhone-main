{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Statistics = function Statistics(_ref) {\n  var _route$params2;\n\n  var route = _ref.route;\n  useEffect(function () {\n    var _route$params;\n\n    if ((_route$params = route.params) != null && _route$params.post) {\n      var toggleMod = route.params;\n      toggleMod(false);\n    }\n  }, [(_route$params2 = route.params) == null ? void 0 : _route$params2.post]);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Hello From Statistics\"\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF'\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3'\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center'\n  }\n});\nexport default Statistics;\n{}","map":{"version":3,"names":["React","useState","useEffect","Statistics","route","params","post","toggleMod","modalVisible","setModalVisible","styles","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom"],"sources":["C:/Users/Elad Hatan/Desktop/TicTacToe_App/screens/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, StyleSheet, Text, Pressable, View } from 'react-native';\n\nconst Statistics = ({ route }) => {\n  useEffect(() => {\n    if (route.params?.post) {\n      const toggleMod = route.params;\n      toggleMod(false);\n    }\n  }, [route.params?.post]);\n\n  const [modalVisible, setModalVisible] = useState(false);\n  //toggleMod(false);\n  return (\n    <View>\n      <Text>Hello From Statistics</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 22,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n  },\n  buttonOpen: {\n    backgroundColor: '#F194FF',\n  },\n  buttonClose: {\n    backgroundColor: '#2196F3',\n  },\n  textStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n});\n\nexport default Statistics;\n\n{\n  /* <View style={styles.centeredView}>\n<Modal\n  animationType='slide'\n  transparent={true}\n  visible={modalVisible}\n  onRequestClose={() => {\n    Alert.alert('Modal has been closed.');\n    setModalVisible(!modalVisible);\n  }}\n>\n  <View style={styles.centeredView}>\n    <View style={styles.modalView}>\n      <Text style={styles.modalText}>Hello World!</Text>\n      <Pressable\n        style={[styles.button, styles.buttonClose]}\n        onPress={() => setModalVisible(!modalVisible)}\n      >\n        <Text style={styles.textStyle}>Hide Modal</Text>\n      </Pressable>\n    </View>\n  </View>\n</Modal>\n<Pressable\n  style={[styles.button, styles.buttonOpen]}\n  onPress={() => setModalVisible(true)}\n>\n  <Text style={styles.textStyle}>Show Modal</Text>\n</Pressable>\n</View>\n); */\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAe;EAAA;;EAAA,IAAZC,KAAY,QAAZA,KAAY;EAChCF,SAAS,CAAC,YAAM;IAAA;;IACd,qBAAIE,KAAK,CAACC,MAAV,aAAI,cAAcC,IAAlB,EAAwB;MACtB,IAAMC,SAAS,GAAGH,KAAK,CAACC,MAAxB;MACAE,SAAS,CAAC,KAAD,CAAT;IACD;EACF,CALQ,EAKN,mBAACH,KAAK,CAACC,MAAP,qBAAC,eAAcC,IAAf,CALM,CAAT;;EAOA,gBAAwCL,QAAQ,CAAC,KAAD,CAAhD;EAAA;EAAA,IAAOO,YAAP;EAAA,IAAqBC,eAArB;;EAEA,OACE,KAAC,IAAD;IAAA,UACE,KAAC,IAAD;MAAA;IAAA;EADF,EADF;AAKD,CAfD;;AAiBA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,YAAY,EAAE;IACZC,IAAI,EAAE,CADM;IAEZC,cAAc,EAAE,QAFJ;IAGZC,UAAU,EAAE,QAHA;IAIZC,SAAS,EAAE;EAJC,CADiB;EAO/BC,SAAS,EAAE;IACTC,MAAM,EAAE,EADC;IAETC,eAAe,EAAE,OAFR;IAGTC,YAAY,EAAE,EAHL;IAITC,OAAO,EAAE,EAJA;IAKTN,UAAU,EAAE,QALH;IAMTO,WAAW,EAAE,MANJ;IAOTC,YAAY,EAAE;MACZC,KAAK,EAAE,CADK;MAEZC,MAAM,EAAE;IAFI,CAPL;IAWTC,aAAa,EAAE,IAXN;IAYTC,YAAY,EAAE,CAZL;IAaTC,SAAS,EAAE;EAbF,CAPoB;EAsB/BC,MAAM,EAAE;IACNT,YAAY,EAAE,EADR;IAENC,OAAO,EAAE,EAFH;IAGNO,SAAS,EAAE;EAHL,CAtBuB;EA2B/BE,UAAU,EAAE;IACVX,eAAe,EAAE;EADP,CA3BmB;EA8B/BY,WAAW,EAAE;IACXZ,eAAe,EAAE;EADN,CA9BkB;EAiC/Ba,SAAS,EAAE;IACTC,KAAK,EAAE,OADE;IAETC,UAAU,EAAE,MAFH;IAGTC,SAAS,EAAE;EAHF,CAjCoB;EAsC/BC,SAAS,EAAE;IACTC,YAAY,EAAE,EADL;IAETF,SAAS,EAAE;EAFF;AAtCoB,CAAlB,CAAf;AA4CA,eAAejC,UAAf;AAEA,CA+BC"},"metadata":{},"sourceType":"module"}