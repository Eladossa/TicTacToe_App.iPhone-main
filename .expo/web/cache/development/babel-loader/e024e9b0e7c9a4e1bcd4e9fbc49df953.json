{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableRow.tsx\";\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableRow = function (_React$Component) {\n  _inherits(DataTableRow, _React$Component);\n\n  function DataTableRow() {\n    _classCallCheck(this, DataTableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataTableRow).apply(this, arguments));\n  }\n\n  _createClass(DataTableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"onPress\", \"style\", \"theme\"]);\n\n      var borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n      return React.createElement(TouchableRipple, _extends({}, rest, {\n        onPress: onPress,\n        style: [styles.container, {\n          borderBottomColor: borderBottomColor\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }), React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return DataTableRow;\n}(React.Component);\n\nDataTableRow.displayName = 'DataTable.Row';\nvar styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default withTheme(DataTableRow);\nexport { DataTableRow };","map":{"version":3,"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,eAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB;AACA,SAASC,SAAT;;IAmBMC,Y;;;;;;;;;;;6BAGK;MAAA,kBACoC,KAAKC,KADzC;MAAA,IACCC,OADD,eACCA,OADD;MAAA,IACUC,KADV,eACUA,KADV;MAAA,IACiBC,KADjB,eACiBA,KADjB;MAAA,IAC2BC,IAD3B;;MAEP,IAAMC,iBAAiB,GAAGX,KAAK,CAACS,KAAK,CAACG,IAANH,GAAaN,KAAbM,GAAqBP,KAAtB,CAALF,CACvBa,KADuBb,CACjB,IADiBA,EAEvBc,GAFuBd,GAGvBe,MAHuBf,EAA1B;MAKA,OACED,oBAACE,eAAD,eACMS,IADN;QAEEH,OAAO,EAAEA,OAFX;QAGEC,KAAK,EAAE,CAACQ,MAAM,CAACC,SAAR,EAAmB;UAAEN,iBAAiB,EAAjBA;QAAF,CAAnB,EAA0CH,KAA1C,CAHT;QAAAU;UAAAC;UAAAC;QAAA;MAAA,IAKErB,oBAACsB,IAAD;QAAMb,KAAK,EAAEQ,MAAM,CAACM,OAApB;QAAAJ;UAAAC;UAAAC;QAAA;MAAA,GAA8B,KAAKd,KAAL,CAAWiB,QAAzC,CALF,CADF;;;;;EAVuBxB,KAAK,CAACyB,S;;AAA3BnB,Y,CACGoB,WADHpB,GACiB,eADjBA;AAsBN,IAAMW,MAAM,GAAGU,UAAU,CAACC,MAAXD,CAAkB;EAC/BT,SAAS,EAAE;IACTW,WAAW,EAAE,OADJ;IAETC,iBAAiB,EAAEH,UAAU,CAACI,aAFrB;IAGTC,SAAS,EAAE,EAHF;IAITC,iBAAiB,EAAE;EAJV,CADoB;EAO/BV,OAAO,EAAE;IACPW,IAAI,EAAE,CADC;IAEPC,aAAa,EAAE;EAFR;AAPsB,CAAlBR,CAAf;AAaA,eAAetB,SAAS,CAACC,YAAD,CAAxB;AAGA,SAASA,YAAT","names":["React","color","TouchableRipple","black","white","withTheme","DataTableRow","props","onPress","style","theme","rest","borderBottomColor","dark","alpha","rgb","string","styles","container","__source","fileName","lineNumber","View","content","children","Component","displayName","StyleSheet","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"sources":["DataTableRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}