{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/RadioButton/RadioButtonItem.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { RadioButtonContext } from \"./RadioButtonGroup\";\nimport { handlePress } from \"./utils\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport RadioButton from \"./RadioButton\";\n\nvar RadioButtonItem = function (_React$Component) {\n  _inherits(RadioButtonItem, _React$Component);\n\n  function RadioButtonItem() {\n    _classCallCheck(this, RadioButtonItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RadioButtonItem).apply(this, arguments));\n  }\n\n  _createClass(RadioButtonItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          label = _this$props.label,\n          style = _this$props.style,\n          _onPress = _this$props.onPress,\n          status = _this$props.status;\n      return React.createElement(RadioButtonContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, function (context) {\n        return React.createElement(TouchableRipple, {\n          onPress: function onPress() {\n            return handlePress({\n              onPress: _onPress,\n              onValueChange: context == null ? void 0 : context.onValueChange,\n              value: value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          }\n        }, React.createElement(View, {\n          style: [styles.container, style],\n          pointerEvents: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, label), React.createElement(RadioButton, {\n          value: value,\n          status: status,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          }\n        })));\n      });\n    }\n  }]);\n\n  return RadioButtonItem;\n}(React.Component);\n\nRadioButtonItem.displayName = 'RadioButton.Item';\nexport default RadioButtonItem;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  }\n});","map":{"version":3,"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,kBAAT;AACA,SAASC,WAAT;AACA,OAAOC,eAAP;AACA,OAAOC,WAAP;;IAqDMC,e;;;;;;;;;;;6BAGK;MAAA,kBAC0C,KAAKC,KAD/C;MAAA,IACCC,KADD,eACCA,KADD;MAAA,IACQC,KADR,eACQA,KADR;MAAA,IACeC,KADf,eACeA,KADf;MAAA,IACsBC,QADtB,eACsBA,OADtB;MAAA,IAC+BC,MAD/B,eAC+BA,MAD/B;MAGP,OACEX,oBAACC,kBAAD,CAAoBW,QAApB;QAAAC;UAAAC;UAAAC;QAAA;MAAA,GACG,UAACC,OAAD,EAAsC;QACrC,OACEhB,oBAACG,eAAD;UACEO,OAAO,EAAE;YAAA,OACPR,WAAW,CAAC;cACVQ,OAAO,EAAEA,QADC;cAEVO,aAAa,EAAED,OAAF,QAAEA,GAAF,MAAEA,UAAO,CAAEC,aAFd;cAGVV,KAAK,EAALA;YAHU,CAAD,CADJ;UADX;UAAAM;YAAAC;YAAAC;UAAA;QAAA,GASEf,oBAACkB,IAAD;UAAMT,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR,EAAmBX,KAAnB,CAAb;UAAwCY,aAAa,EAAC,MAAtD;UAAAR;YAAAC;YAAAC;UAAA;QAAA,GACEf,oBAACsB,IAAD;UAAAT;YAAAC;YAAAC;UAAA;QAAA,GAAOP,KAAP,CADF,EAEER,oBAACI,WAAD;UAAaG,KAAK,EAAEA,KAApB;UAA2BI,MAAM,EAAEA,MAAnC;UAAAE;YAAAC;YAAAC;UAAA;QAAA,EAFF,CATF,CADF;MAFJ,EADF;;;;;EAN0Bf,KAAK,CAACuB,S;;AAA9BlB,e,CACGmB,WADHnB,GACiB,kBADjBA;AA+BN,eAAeA,eAAf;AAEA,IAAMc,MAAM,GAAGM,UAAU,CAACC,MAAXD,CAAkB;EAC/BL,SAAS,EAAE;IACTO,aAAa,EAAE,KADN;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,eAHP;IAITC,eAAe,EAAE,CAJR;IAKTC,iBAAiB,EAAE;EALV;AADoB,CAAlBN,CAAf","names":["React","RadioButtonContext","handlePress","TouchableRipple","RadioButton","RadioButtonItem","props","value","label","style","onPress","status","Consumer","__source","fileName","lineNumber","context","onValueChange","View","styles","container","pointerEvents","Text","Component","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal"],"sources":["RadioButtonItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress } from './utils';\nimport TouchableRipple from '../TouchableRipple';\nimport RadioButton from './RadioButton';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton, Text } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'first',\n *   };\n *\n *   render() {\n *     return(\n *       <RadioButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *           <RadioButton.Item label=\"First item\" value=\"first\" />\n *           <RadioButton.Item label=\"Second item\" value=\"second\" />\n *       </RadioButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass RadioButtonItem extends React.Component<Props> {\n  static displayName = 'RadioButton.Item';\n\n  render() {\n    const { value, label, style, onPress, status } = this.props;\n\n    return (\n      <RadioButtonContext.Consumer>\n        {(context?: RadioButtonContextType) => {\n          return (\n            <TouchableRipple\n              onPress={() =>\n                handlePress({\n                  onPress: onPress,\n                  onValueChange: context?.onValueChange,\n                  value,\n                })\n              }\n            >\n              <View style={[styles.container, style]} pointerEvents=\"none\">\n                <Text>{label}</Text>\n                <RadioButton value={value} status={status}></RadioButton>\n              </View>\n            </TouchableRipple>\n          );\n        }}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nexport default RadioButtonItem;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}